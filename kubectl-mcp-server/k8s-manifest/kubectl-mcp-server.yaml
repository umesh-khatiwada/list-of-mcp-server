---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubectl-mcp-server
  namespace: kubectl-mcp-server
  labels:
    app: kubectl-mcp-server
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubectl-mcp-server
  template:
    metadata:
      labels:
        app: kubectl-mcp-server
        version: v1
    spec:
      serviceAccountName: kubectl-mcp-server
      containers:
      - name: kubectl-mcp-server
        image: umesh1212/kubectl-mcp-server:v1
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: mcp-port
          protocol: TCP
        env:
        - name: TRANSPORT
          value: "sse"
        - name: PORT
          value: "8000"
        - name: HOST
          value: "0.0.0.0"
        - name: UVICORN_HOST
          value: "0.0.0.0"
        - name: UVICORN_PORT
          value: "8000"
        resources:
          requests:
            memory: "12Mi"
            cpu: "10m"
          limits:
            memory: "200Mi"
            cpu: "200m"
        volumeMounts:
        - name: kubeconfig
          mountPath: /root/.kube
          readOnly: true
      - name: nginx-proxy
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        resources:
          requests:
            memory: "8Mi"
            cpu: "5m"
          limits:
            memory: "32Mi"
            cpu: "50m"
      volumes:
      - name: kubeconfig
        secret:
          secretName: kubectl-mcp-server-kubeconfig
          defaultMode: 0600
      - name: nginx-config
        configMap:
          name: nginx-proxy-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: kubectl-mcp-server-service
  namespace: kubectl-mcp-server
  labels:
    app: kubectl-mcp-server
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: kubectl-mcp-server

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubectl-mcp-server
  namespace: kubectl-mcp-server
  labels:
    app: kubectl-mcp-server

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubectl-mcp-server-role
  labels:
    app: kubectl-mcp-server
rules:
# Allow basic kubectl operations
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["extensions"]
  resources: ["deployments", "daemonsets", "replicasets", "ingresses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "networkpolicies"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses", "volumeattachments"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubectl-mcp-server-binding
  labels:
    app: kubectl-mcp-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubectl-mcp-server-role
subjects:
- kind: ServiceAccount
  name: kubectl-mcp-server
  namespace: kubectl-mcp-server

---
# ConfigMap for nginx proxy configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-proxy-config
  namespace: kubectl-mcp-server
  labels:
    app: kubectl-mcp-server
data:
  default.conf: |
    upstream mcp_backend {
        server 127.0.0.1:8000;
    }
    
    server {
        listen 80;
        server_name _;
        
        # Enable keepalive for SSE
        proxy_buffering off;
        proxy_cache off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SSE specific headers
        proxy_set_header Cache-Control "no-cache";
        proxy_set_header X-Accel-Buffering "no";
        
        # Timeout settings for SSE
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 86400s;  # 24 hours for long-lived SSE connections
        
        location / {
            proxy_pass http://mcp_backend;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

---
# ConfigMap for additional configuration if needed
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubectl-mcp-server-config
  namespace: kubectl-mcp-server
  labels:
    app: kubectl-mcp-server
data:
  transport: "sse"
  port: "8000"
  log_level: "INFO"

---
# HorizontalPodAutoscaler for auto-scaling (optional)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: kubectl-mcp-server-hpa
  namespace: kubectl-mcp-server
  labels:
    app: kubectl-mcp-server
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: kubectl-mcp-server
  minReplicas: 1
  maxReplicas: 1
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
