{
  "openapi": "3.0.1",
  "info": {
    "title": "Computesphere API",
    "description": "",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "info@computesphere.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://api.test.computesphere.com"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Home",
          "Customer"
        ],
        "summary": "Show Computeshere home page message",
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "List Account",
        "description": "List Account",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Currency",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscription_id",
            "in": "query",
            "description": "Subscription Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.AccountListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Create Account",
        "description": "Create Account",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create Account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.CreateAccountPayloadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.AccountResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/accounts/domainDetails": {
      "get": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Get Account Domain Details with filter option",
        "description": "Get Account Domain Details",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_expired",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_issued",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_requested",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "project_ids",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/model.DomainDetails"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/features/available": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get Account",
        "description": "Get Account from Id",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SubscriptionItemsResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/features/{account_id}": {
      "put": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Update Accessibility Request",
        "description": "Update Accessibility Request",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Accessibility Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.FeatureAccessibilityRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.FeatureRequestResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/accounts/invitation/status": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Check invitation status",
        "description": "Check the status of a user's account invitation (Public endpoint)",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Base64 encoded token containing account_id and email (format: account_id:email)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns invitation status (pending, accepted, expired, etc.)",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/response.SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Returned when required parameters are missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Returned when invitation is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/invoices": {
      "get": {
        "tags": [
          "Invoice",
          "Customer"
        ],
        "summary": "list invoices associated with an account",
        "description": "list invoices associated with an account",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.InvoiceListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Invoice",
          "Customer"
        ],
        "summary": "Create An Invoice",
        "description": "Create an invoice to initiate further billing process",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create an invoice for an account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.InvoiceRequestPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.InvoiceResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/accounts/invoices/paynow": {
      "get": {
        "tags": [
          "Invoice",
          "Customer"
        ],
        "summary": "get a particular invoice associated with an account",
        "description": "get a particular invoice associated with an account",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.InvoiceResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/invoices/resources": {
      "put": {
        "tags": [
          "Invoice",
          "Customer"
        ],
        "summary": "Create An Invoice",
        "description": "Create an invoice to initiate further billing process",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create an invoice for an account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.InvoiceRequestPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.InvoiceResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/accounts/invoices/{id}": {
      "get": {
        "tags": [
          "Invoice",
          "Customer"
        ],
        "summary": "get a particular invoice associated with an account",
        "description": "get a particular invoice associated with an account",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.InvoiceResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Invoice",
          "Customer"
        ],
        "summary": "update a particular invoice associated with an account",
        "description": "update a particular invoice associated with an account",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update an invoice's details of an account - Supported status are: active, cancelled",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.InvoiceUpdatePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.InvoiceResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/accounts/invoices/{id}/download": {
      "get": {
        "tags": [
          "Invoice",
          "Customer"
        ],
        "summary": "Download an invoice pdf",
        "description": "Download an invoice pdf",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/invoices/{id}/items": {
      "get": {
        "tags": [
          "Invoice",
          "Customer"
        ],
        "summary": "get invoice items associated with an invoice id",
        "description": "get invoice items associated with an invoice id",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.InvoiceItemListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/invoices/{id}/items/{tid}": {
      "get": {
        "tags": [
          "Invoice",
          "Customer"
        ],
        "summary": "get an invoice item associated with an invoice id",
        "description": "get an invoice item associated with an invoice id",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tid",
            "in": "path",
            "description": "InvoiceItem Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.InvoiceItemResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/overview": {
      "get": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Get Account Overview",
        "description": "Get Account Overview details",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.AccountOverviewResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/payments/history": {
      "get": {
        "tags": [
          "PaymentHistory",
          "Customer"
        ],
        "summary": "List payment history associated with an account",
        "description": "List payment history associated with an account",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.PaymentHistoryListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/payments/history/{id}": {
      "get": {
        "tags": [
          "PaymentHistory",
          "Customer"
        ],
        "summary": "Get a particular payment history associated with an account",
        "description": "Get a particular payment history associated with an account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment History Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.PaymentHistoryResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/resources": {
      "get": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Get current resources associated with an account (plans, subscription details)",
        "description": "Get current resources associated with an account (plans, subscription details)",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ResourceHistoryResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/resources/usage": {
      "get": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Get resources usasge history from the start of month till date of the associated account",
        "description": "Get resources usasge history from the start of month till date of the associated account",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ResourceUsageHistorySwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/roles": {
      "get": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Get Account Role",
        "description": "Get Account Role from Id, Role will be owner, admin or member",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/search": {
      "get": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Search Account",
        "description": "Search Account resources according to search query",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search Query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.SearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/subscribe/individual": {
      "post": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Subscribe to individual subscription",
        "description": "Subscribe to individual subscription",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "Country Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.AccountResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/users": {
      "get": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "List Account Users",
        "description": "List Account Users",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.AccountUserWithRoleListSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Add User to Account",
        "description": "Add user to the Account",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Add user to the account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.AccountUserWithPermissionRequestPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/accounts/users/{uid}": {
      "put": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Update Account User Role",
        "description": "Update Account User Role with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Update Account User",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.AccountUserWithPermissionUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.AccountUserWithPermissionResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Remove User From Account",
        "description": "Remove User From the Account",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/{id}": {
      "get": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Get Account",
        "description": "Get Account from Id",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.AccountResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Update Account",
        "description": "Update Account with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.AccountUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.AccountResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/accounts/{id}/invitation/resend": {
      "post": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Resend Account User Invitation",
        "description": "Resend invitation to user for account",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "User Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/{id}/invitation/revoke": {
      "post": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Revoke an account invitation",
        "description": "Revokes a pending invitation for a user to join an account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "User Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/{id}/invoices/{invoiceId}/download": {
      "get": {
        "tags": [
          "Invoice",
          "Customer"
        ],
        "summary": "Download an invoice pdf",
        "description": "Download an invoice pdf",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/accounts/{id}/users": {
      "post": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Add User to Account",
        "description": "Add user to the Account",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Add user to the account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.AccountUserWithPermissionRequestPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/accounts/{id}/users/roles": {
      "put": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Update Account User Role",
        "description": "Update Account User Role with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Account User",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/model.AccountUserWithPermissionUpdateAllRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/accounts/{id}/users/{uid}": {
      "delete": {
        "tags": [
          "Account",
          "Customer"
        ],
        "summary": "Remove User From Account",
        "description": "Remove User From the Account",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/activity-logs": {
      "get": {
        "tags": [
          "Activity",
          "Customer"
        ],
        "summary": "List Activity",
        "description": "List Activity",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "Project Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "Action",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "module",
            "in": "query",
            "description": "Module",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "Title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start Date(2006-01-02)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End Date(2006-01-02)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ActivityListResponseSwagger"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/alerts": {
      "get": {
        "tags": [
          "AlertRule",
          "Customer"
        ],
        "summary": "List Alert Rules",
        "description": "List Alert Rules",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alert_type",
            "in": "query",
            "description": "Alert Type(cpu, disk, memory)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "severity_level",
            "in": "query",
            "description": "Severity Level(low, medium, high)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environment_id",
            "in": "query",
            "description": "Environment Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Active(true/false)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/model.AlertRuleResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "AlertRule",
          "Customer"
        ],
        "summary": "Create AlertRule",
        "description": "Create AlertRule",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create Alert Rule",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.AlertRuleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/alerts/{id}": {
      "get": {
        "tags": [
          "AlertRule",
          "Customer"
        ],
        "summary": "Get Alert Rule",
        "description": "Get Alert Rule from Id",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Alert Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.AlertRuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "AlertRule",
          "Customer"
        ],
        "summary": "Update AlertRule",
        "description": "Update AlertRule",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Alert Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Alert Rule",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.AlertRuleUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "AlertRule",
          "Customer"
        ],
        "summary": "Delete Alert Rule",
        "description": "Delete Alert Rule with the input Id",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Alert Rule Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api-tokens": {
      "get": {
        "tags": [
          "ApiToken",
          "Customer"
        ],
        "summary": "List ApiToken",
        "description": "List ApiToken",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Token Type [account/user]",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "description": "Account ID for type account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ApiTokenListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "ApiToken",
          "Customer"
        ],
        "summary": "Create ApiToken",
        "description": "Create ApiToken",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create Api Token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.ApiTokenRequestPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ApiTokenResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api-tokens/{id}": {
      "get": {
        "tags": [
          "ApiToken",
          "Customer"
        ],
        "summary": "Get ApiToken",
        "description": "Get ApiToken from Id",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Api Token Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ApiTokenResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ApiToken",
          "Customer"
        ],
        "summary": "Delete ApiToken",
        "description": "Delete ApiToken with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ApiToken id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}": {
      "get": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Get Deployment details",
        "description": "Get Deployment details",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Delete Deployment",
        "description": "Delete Deployment with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/autoScaling": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment Auto Scaling",
        "description": "Update Deployment Auto Scaling fields with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment Auto Scaling",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.AutoScalingConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/ciBuildlogs": {
      "get": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Get Deployment CI build logs",
        "description": "Get Deployment build logs for service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/model.DeploymentLogsResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/ciConfig": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment CI Config",
        "description": "Update Deployment CI Config fields with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment CI Config",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.CIConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/clone": {
      "post": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Clone Deployment Image through external pipelines like, gitlab, github, bitbucket",
        "description": "Clone Deployment Image with the new image tag from external pipelines",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Clone Deployment to another environment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.CloneDeploymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/config": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment Config Field",
        "description": "Update Deployment Config Field with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment Config",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.DBConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/createStor": {
      "post": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Create Deployment Spherestor",
        "description": "Create Deployment Spherestor with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create Deployment Spherestor",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.DeploymentPVCRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/cronjob": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment Cron Job",
        "description": "Update Deployment Cron Job with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment Cron Job",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.CronJob"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/cronjob/history": {
      "get": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Get Deployment Cron Job History",
        "description": "Get Deployment Cron Job History with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/currentVersion": {
      "get": {
        "tags": [
          "DeploymentHistory",
          "Customer"
        ],
        "summary": "Current Version DeploymentHistory",
        "description": "Current Version DeploymentHistory with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentHistoryResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/customDomain": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment Custom Domain",
        "description": "Update Deployment Custom Domain with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment Custom Domain",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.DeploymentCustomDomainUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Remove Deployment Custom Domain",
        "description": "Remove Deployment Custom Domain with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/deploylogs": {
      "get": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Get Deployment build logs",
        "description": "Get Deployment build logs for service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/model.DeploymentLogsResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/externalLogging": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment External Logging",
        "description": "Update Deployment External Logging with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment External Logging",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.ExternalLogging"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/healthCheck": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment Health Check",
        "description": "Update Deployment Health Check fields with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment Health Check",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.HealthCheck"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/histories": {
      "get": {
        "tags": [
          "DeploymentHistory",
          "Customer"
        ],
        "summary": "List DeploymentHistory",
        "description": "List DeploymentHistory",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentHistoryListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/histories/{hid}": {
      "get": {
        "tags": [
          "DeploymentHistory",
          "Customer"
        ],
        "summary": "Get DeploymentHistory",
        "description": "Get DeploymentHistory from Id",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hid",
            "in": "path",
            "description": "Deployment History Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentHistoryResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "DeploymentHistory",
          "Customer"
        ],
        "summary": "Delete DeploymentHistory",
        "description": "Delete DeploymentHistory with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hid",
            "in": "path",
            "description": "Deployment History Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/image": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment Image",
        "description": "Update Deployment Image with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment Image",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.DeploymentImageUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/metrics": {
      "get": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Get Deployment metrics",
        "description": "Get Deployment metrics for specific environment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Start Time(format: 2006-01-02T15:04:05Z)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "End Time(format: 2006-01-02T15:04:05Z)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.MapStringInterfaceResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/networkAccess": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment Network Access",
        "description": "Update Deployment Network Access with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment Network Access",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.NetworkAccess"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/podCount": {
      "get": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Get Deployment pod count",
        "description": "Get pod count for specific deployment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Start Time(format: 2006-01-02T15:04:05Z)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "End Time(format: 2006-01-02T15:04:05Z)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/port": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment Port",
        "description": "Update Deployment Port fields with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment Port",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.DeploymentPortUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/redeploy": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Redeploy Deployment",
        "description": "Redeploy the Deployment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/restart": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Restart Deployment",
        "description": "Restart the Deployment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/rollback/{hid}": {
      "post": {
        "tags": [
          "DeploymentHistory",
          "Customer"
        ],
        "summary": "Rollback DeploymentHistory",
        "description": "Rollback DeploymentHistory with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hid",
            "in": "path",
            "description": "Deployment History id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/runtimelogs": {
      "get": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Get Runtime Logs",
        "description": "Get Runtime logs for specific environment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/secretVariables": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment Variables",
        "description": "Update Deployment Secret Variables with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment Secret Variables",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.DeploymentSecretVariablesUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/sphereCount": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment Sphere Count",
        "description": "Update Deployment Sphere Count fields with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment Sphere Count",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.DeploymentSphereCountUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/spherestor/{spherestorId}/newmount": {
      "post": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Mount Deployment Spherestor",
        "description": "Mount Deployment Spherestor with the input id",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spherestorId",
            "in": "path",
            "description": "Spherestor Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create Deployment Spherestor",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.NewMountSpherestorReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Deployment Spherestor mounted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/start": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Start Deployment",
        "description": "Start the Deployment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/stop": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Stop Deployment",
        "description": "Stop the Deployment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/stopCI": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Stop Deployment CI Process",
        "description": "Stop Deployment CI Process",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/stor/{storId}": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment Spherestor",
        "description": "Update Deployment Spherestor with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storId",
            "in": "path",
            "description": "Spherestor Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment Spherestor",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.DeploymentPVCRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/stor/{storId}/unmount": {
      "post": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Unmount Deployment Spherestor",
        "description": "Unmount Deployment Spherestor with the input id",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storId",
            "in": "path",
            "description": "Spherestor Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/deployments/{id}/update-image": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment Image through external pipelines like, gitlab, github, bitbucket",
        "description": "Update Deployment Image with the new image tag from external pipelines",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment Image through Webhook",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.DeploymentWebhookRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.DeploymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/deployments/{id}/variables": {
      "put": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Update Deployment Variables",
        "description": "Update Deployment Variables with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Deployment Variables",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.DeploymentVariablesUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/device/users/login": {
      "post": {
        "tags": [
          "Device Authentication"
        ],
        "summary": "Create Device User Login Code",
        "description": "This endpoint generates a new device login code and returns it",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.DeviceauthLoginRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.DeviceauthErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/device/users/status": {
      "get": {
        "tags": [
          "Device Authentication"
        ],
        "summary": "Check Device User Login Code Status",
        "description": "This endpoint checks the status of the device login code",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Device Login Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.DeviceauthLoginResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.DeviceauthErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.DeviceauthErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/device/users/validate": {
      "put": {
        "tags": [
          "Device Authentication"
        ],
        "summary": "Validate Device Login Code",
        "description": "This endpoint validates the device login code and associates it with a token",
        "requestBody": {
          "description": "Device Login Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.DeviceauthLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.DeviceauthLoginResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.DeviceauthErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.DeviceauthErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/environments": {
      "get": {
        "tags": [
          "Environment",
          "Customer"
        ],
        "summary": "List Environment",
        "description": "List Environment",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployed",
            "in": "query",
            "description": "Deployed(true/false)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "description": "Service Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.EnvironmentListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Environment",
          "Customer"
        ],
        "summary": "Create Environment",
        "description": "Create Environment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create Environment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.EnvironmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.EnvironmentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/environments/{id}": {
      "get": {
        "tags": [
          "Environment",
          "Customer"
        ],
        "summary": "Get Environment",
        "description": "Get Environment from Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.EnvironmentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Environment",
          "Customer"
        ],
        "summary": "Update Environment",
        "description": "Update Environment with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Environment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.EnvironmentUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.EnvironmentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Environment",
          "Customer"
        ],
        "summary": "Delete Environment",
        "description": "Delete Environment with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/environments/{id}/customdomain": {
      "put": {
        "tags": [
          "Environment",
          "Customer"
        ],
        "summary": "Update Environment",
        "description": "Update Environment with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Environment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.EnvironmentCustomDomainUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.EnvironmentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Environment",
          "Customer"
        ],
        "summary": "Remove Environment Custom Domain",
        "description": "Removes a custom domain from an environment using the provided input payload.",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Environment ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.EnvironmentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/environments/{id}/domain/path": {
      "put": {
        "tags": [
          "Environment",
          "Customer"
        ],
        "summary": "Update Environment",
        "description": "Update Environment with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Environment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.DomainPathRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.EnvironmentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/environments/{id}/domain/status": {
      "put": {
        "tags": [
          "Environment",
          "Customer"
        ],
        "summary": "Update Environment",
        "description": "Update Environment with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Environment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.EnvSubDomain"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.EnvironmentSubDomain"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/environments/{id}/networkAccess": {
      "put": {
        "tags": [
          "Environment",
          "Customer"
        ],
        "summary": "Update Environment Network Access",
        "description": "Update Environment Network Access fields with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Environment Network Access",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.NetworkAccess"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.EnvironmentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/environments/{id}/networkPolicy": {
      "put": {
        "tags": [
          "Environment",
          "Customer"
        ],
        "summary": "Update Environment Network Policy",
        "description": "Update Environment Network Policy fields with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Environment Network Policy",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.NetworkPolicy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.EnvironmentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/feedbacks": {
      "post": {
        "tags": [
          "Feedback",
          "Customer"
        ],
        "summary": "Create Feedback",
        "description": "This endpoint is used to create a new feedback",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Feedback",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.FeedbackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.FeedbackResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/feedbacks/categories": {
      "get": {
        "tags": [
          "Feedback",
          "Customer"
        ],
        "summary": "List the feedback categories",
        "description": "This endpoint is used to fetch the categories list",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/model.FeedBackCategoryResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/feedbacks/{id}/attachments": {
      "post": {
        "tags": [
          "Feedback",
          "Customer"
        ],
        "summary": "Send Feedback Attachment",
        "description": "This endpoint is used to send feedback attachment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Issue Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "File to upload",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/git-connections": {
      "get": {
        "tags": [
          "GitConnection",
          "Customer"
        ],
        "summary": "List Git Connections",
        "description": "List Git Connections",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/model.GitConnectionResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "GitConnection",
          "Customer"
        ],
        "summary": "Create Git Connection",
        "description": "Create Git Connection",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Git Connection Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.GitConnectionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.GitConnectionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/git-connections/{id}": {
      "get": {
        "tags": [
          "GitConnection",
          "Customer"
        ],
        "summary": "Get Git Connection",
        "description": "Get Git Connection",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Git Connection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.GitConnectionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "GitConnection",
          "Customer"
        ],
        "summary": "Delete Git Connection",
        "description": "Delete Git Connection",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Git Connection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/git-connections/{id}/branches": {
      "get": {
        "tags": [
          "GitConnection",
          "Customer"
        ],
        "summary": "List Branches",
        "description": "List Branches",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Git Connection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repo_name",
            "in": "query",
            "description": "Repository Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "description": "Repository Owner(required only for github)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace",
            "in": "query",
            "description": "Workspace Name(required only for bitbucket)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repo_id",
            "in": "query",
            "description": "Repository Id(required only for gitlab)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/git-connections/{id}/repositories": {
      "get": {
        "tags": [
          "GitConnection",
          "Customer"
        ],
        "summary": "List Repositories",
        "description": "List Repositories",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Git Connection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/model.RepoListResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails": {
      "get": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "List Guardrails",
        "description": "List Guardrails",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.GuardrailResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Create Guardrail",
        "description": "Create Guardrail",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Guardrail Creation Payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.GuardrailPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.SuccessMessageOnly"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/guardrails/audit-logs/{id}": {
      "get": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Get Audit Logs",
        "description": "Get Audit Logs",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Guardrail Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.AuditLogResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails/check": {
      "post": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Check Guardrail",
        "description": "Check Guardrail",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Scope",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Guardrail Check Payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.GuardrailCheckField"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.GuardrailSingleFieldResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/guardrails/compliance-report/{id}": {
      "get": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Get Compliance Report",
        "description": "Get Compliance Report",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Compliance Report Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ComplianceReportSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails/compliance-reports/details": {
      "get": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Compliance Details",
        "description": "Compliance Details",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ComplianceReportResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails/compliance-reports/{id}": {
      "get": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "List Compliance Reports",
        "description": "List Compliance Reports",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Guardrail Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ComplianceReportResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails/fields": {
      "get": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "List of fields which can be used to create the guardrails rule",
        "description": "List of fields which can be used to create the guardrails rule",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.GuardrailSupportedFieldsSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails/predefined-guardrail/assign/{id}": {
      "post": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Assign predefined guardrail to an account",
        "description": "GiAssign predefined guardrail to an account",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Guardrail Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.SuccessMessageOnly"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails/predefined-guardrail/unassign/{id}": {
      "post": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Assign predefined guardrail to an account",
        "description": "GiAssign predefined guardrail to an account",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Guardrail Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.SuccessMessageOnly"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails/predefined-guardrails": {
      "get": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Get predefined guardrails",
        "description": "Get predefined guardrails",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.GuardrailResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails/rule": {
      "post": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Create Guardrail Rule",
        "description": "Create Guardrail Rule",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Guardrail Rule",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.GuardrailRulePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.GuardrailRuleResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/guardrails/rule/{id}": {
      "put": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Update Guardrail Rule",
        "description": "Update Guardrail Rule",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Guardrail Rule Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Guardrail Rule Update Payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.GuardrailRulePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.SuccessMessageOnly"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Delete Guardrail Rule",
        "description": "Delete Guardrail Rule",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Guardrail Rule Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.SuccessMessageOnly"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails/rules": {
      "get": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "List Guardrail Rules",
        "description": "List Guardrail Rules",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.GuardrailRulesResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails/run-audit": {
      "post": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Run Audit for Guardrails",
        "description": "Run Audit for Guardrails",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.SuccessMessageOnly"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails/run-audit/{id}": {
      "post": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Run Audit for Guardrails",
        "description": "Run Audit for Guardrails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Guardrail Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.SuccessMessageOnly"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails/supported-operators-by-field": {
      "get": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "List of fields which can be used to create the guardrails rule",
        "description": "List of fields which can be used to create the guardrails rule",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Scope of the field (e.g., 'service')",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field",
            "in": "query",
            "description": "Field to fetch supported operators for (e.g., 'port')",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.GuardrailSupportedFieldsSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails/{id}": {
      "get": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Get Guardrail",
        "description": "Get Guardrail",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Guardrail Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SingleGuardrailResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Update Guardrail",
        "description": "Update Guardrail",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Guardrail Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Guardrail Update Payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.GuardrailPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.SuccessMessageOnly"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Delete Guardrail",
        "description": "Delete Guardrail",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Guardrail Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.SuccessMessageOnly"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/guardrails/{id}/status-toggler": {
      "patch": {
        "tags": [
          "Guardrails",
          "Customer"
        ],
        "summary": "Update Guardrail Status for enabled and disabled",
        "description": "Update Guardrail Status",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Guardrail Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.SuccessMessageOnly"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/notifications": {
      "get": {
        "tags": [
          "Notification",
          "Customer"
        ],
        "summary": "Get InApp Notifications of a user",
        "description": "Fetch InApp Notification of a user",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/swagger.InAppNotificationListResponseSwagger"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/notifications/count": {
      "get": {
        "tags": [
          "Notification",
          "Customer"
        ],
        "summary": "Get read and unread count of in-app notifications of a user",
        "description": "Get read and unread count of in-app notifications of a user",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.InAppNotificationReadCountSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/notifications/read": {
      "put": {
        "tags": [
          "Notification",
          "Customer"
        ],
        "summary": "Mark provided in-app notifications as read for a user",
        "description": "Mark provided in-app notifications as read for a user",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Notification Read Status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.MarkInAppNotificationRequestPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/notifications/read/all": {
      "put": {
        "tags": [
          "Notification",
          "Customer"
        ],
        "summary": "Mark all in-app notifications as read for a user",
        "description": "Mark all in-app notifications as read for a user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/notifications/settings": {
      "get": {
        "tags": [
          "Notification",
          "Customer"
        ],
        "summary": "Get Notification Setting of a user",
        "description": "Fetch notification setting of a user",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.NotificationSettingResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Notification",
          "Customer"
        ],
        "summary": "Update Notification Setting",
        "description": "Update notification setting for a user with the input payload",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Notification",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.NotificationSettingRequestPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.NotificationSettingResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/payments/callbacks": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Endpoint for payment gateway to send request after the payment session has completed",
        "description": "This endpoint acts as a webhook for payment gatways to send info about the completed payment session",
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          }
        }
      }
    },
    "/payments/failure": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Send a request indacting the failure of the payment",
        "description": "Send a request indacting the failure of the payment",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "query",
            "description": "Transaction Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "invoice_id",
            "in": "query",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "description": "Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gateway_id",
            "in": "query",
            "description": "Gateway Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/payments/gateways": {
      "get": {
        "tags": [
          "PaymentGateway",
          "Customer"
        ],
        "summary": "List PaymentGateway",
        "description": "List PaymentGateway",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Active(true/false)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.PaymentGatewayListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/payments/gateways/{id}": {
      "get": {
        "tags": [
          "PaymentGateway",
          "Customer"
        ],
        "summary": "Get PaymentGateway",
        "description": "Get PaymentGateway from Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PaymentGateway Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.PaymentGatewayResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/payments/pay": {
      "post": {
        "tags": [
          "Payment",
          "Customer"
        ],
        "summary": "Initiate a payment",
        "description": "Initiate a payment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Initiate a payment : Set gateway_id to 0 to use the default gateway for the user's country",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.PaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.GatewayReponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/payments/payFree": {
      "post": {
        "tags": [
          "Payment",
          "Customer"
        ],
        "summary": "Initiate a payment",
        "description": "Initiate a payment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.PaymentResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/payments/success": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Send a request indacting the success of the payment",
        "description": "Send a request indacting the success of the payment",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "query",
            "description": "Transaction Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "invoice_id",
            "in": "query",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "description": "Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gateway_id",
            "in": "query",
            "description": "Gateway Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/plans": {
      "get": {
        "tags": [
          "Plan",
          "Customer"
        ],
        "summary": "List Plan",
        "description": "List Plan",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "Country Code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency_code",
            "in": "query",
            "description": "Currency Code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.PlanListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/plans/spherestor": {
      "get": {
        "tags": [
          "Plan"
        ],
        "summary": "Get Spherestor Plan",
        "description": "Get Spherestor Plan from country code",
        "parameters": [
          {
            "name": "country_code",
            "in": "query",
            "description": "Country Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.PlanResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/plans/{id}": {
      "get": {
        "tags": [
          "Plan",
          "Customer"
        ],
        "summary": "Get Plan",
        "description": "Get Plan from Id",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Plan Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.PlanResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/plugins": {
      "get": {
        "tags": [
          "Plugin",
          "Customer"
        ],
        "summary": "List Plugin",
        "description": "List Plugin",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "base_image",
            "in": "query",
            "description": "Base Image",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.PluginListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/plugins/{id}": {
      "get": {
        "tags": [
          "Plugin",
          "Customer"
        ],
        "summary": "Get Plugin",
        "description": "Get Plugin from Id",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Plugin Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.PluginResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "Project",
          "Customer"
        ],
        "summary": "List Project",
        "description": "List Project",
        "operationId": "get_user_projects",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Active",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ProjectListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Project",
          "Customer"
        ],
        "summary": "Create Project",
        "description": "Create Project",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create Project",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.ProjectRequestPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ProjectResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": [
          "Project",
          "Customer"
        ],
        "summary": "Get Project",
        "description": "Get Project from Id",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ProjectResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Project",
          "Customer"
        ],
        "summary": "Update Project",
        "description": "Update Project with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Project",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.ProjectUpdatePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ProjectResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Project",
          "Customer"
        ],
        "summary": "Delete Project",
        "description": "Delete Project with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "project id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/projects/{id}/alerts": {
      "put": {
        "tags": [
          "Project",
          "Customer"
        ],
        "summary": "Update Project Alert",
        "description": "Update Project Alert with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enable/Disable Project Alert",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.ProjectAlertUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ProjectResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/projects/{id}/alerts/notifications": {
      "put": {
        "tags": [
          "Project",
          "Customer"
        ],
        "summary": "Update Project",
        "description": "Update Project with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Project Alert Notification",
          "content": {
            "application/json": {
              "schema": {
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ProjectResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/projects/{id}/roles": {
      "get": {
        "tags": [
          "Project",
          "Customer"
        ],
        "summary": "Get Project Role",
        "description": "Get Project Role from Id, Roles will be owner, admin, editable, viewable, none",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/services": {
      "get": {
        "tags": [
          "Service",
          "Customer"
        ],
        "summary": "List Service",
        "description": "List Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ServiceListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.Response"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Service",
          "Customer"
        ],
        "summary": "Create Service",
        "description": "Create Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create Service",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.ServiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ServiceResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/services/{id}": {
      "get": {
        "tags": [
          "Service",
          "Customer"
        ],
        "summary": "Get Service",
        "description": "Get Service from Id",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Service id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ServiceResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Service",
          "Customer"
        ],
        "summary": "Deploy Service in Another Environment",
        "description": "Deploy same Service in Another Environment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Deploy Service Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.ServiceReDeployRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ServiceResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Service",
          "Customer"
        ],
        "summary": "Delete Service",
        "description": "Delete Service with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Service Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/services/{id}/env/{eid}/logs": {
      "get": {
        "tags": [
          "Service",
          "Customer"
        ],
        "summary": "Get Service Logs",
        "description": "Get Service logs for specific environment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eid",
            "in": "path",
            "description": "Environment id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/services/{id}/env/{eid}/metrics": {
      "get": {
        "tags": [
          "Service",
          "Customer"
        ],
        "summary": "Get Service Logs",
        "description": "Get Service logs for specific environment",
        "parameters": [
          {
            "name": "start_time",
            "in": "query",
            "description": "Start Time(format: 2006-01-02T15:04:05Z)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "End Time(format: 2006-01-02T15:04:05Z)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Service id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eid",
            "in": "path",
            "description": "Environment id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.MapStringInterfaceResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/snapshot/backup": {
      "post": {
        "tags": [
          "Snapshot",
          "Customer"
        ],
        "summary": "Snapshot CPU Service",
        "description": "Snapshot CPU Metrix Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "BackUp Service",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.BackupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SnapshotBackupResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/snapshot/backup/deployment/{deployment_id}": {
      "get": {
        "tags": [
          "Snapshot",
          "Customer"
        ],
        "summary": "List backups",
        "description": "List backups for a deployment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_id",
            "in": "path",
            "description": "Deployment ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SnapshotBackupResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/snapshot/backup/schedule": {
      "put": {
        "tags": [
          "Snapshot",
          "Customer"
        ],
        "summary": "Snapshot Service",
        "description": "Snapshot Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Backup Schedule Service",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.BackupScheduleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SnapshotBackupResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/snapshot/backup/{id}": {
      "put": {
        "tags": [
          "Snapshot",
          "Customer"
        ],
        "summary": "Update a backup",
        "description": "Update a backup for a deployment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Backup ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Backup Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.BackupRequestUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SnapshotBackupResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Snapshot",
          "Customer"
        ],
        "summary": "Delete a backup",
        "description": "Delete a backup for a deployment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Backup ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/snapshot/backup/{id}/deployment/{deployment_id}/": {
      "get": {
        "tags": [
          "Snapshot",
          "Customer"
        ],
        "summary": "backup",
        "description": "backups for a deployment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Backup ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_id",
            "in": "path",
            "description": "Deployment ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SnapshotBackupResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/snapshot/logs/{deployment_id}": {
      "get": {
        "tags": [
          "Snapshot",
          "Customer"
        ],
        "summary": "Get SnapShot Logs Service",
        "description": "SnapShot Logs Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_id",
            "in": "path",
            "description": "deployment id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SnapshotLogsResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/snapshot/restore": {
      "post": {
        "tags": [
          "Snapshot",
          "Customer"
        ],
        "summary": "Restore Service",
        "description": "Snapshot CPU Metrix Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Restore Service",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.RestoreRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SnapshotRestoreResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/spherefiles/boot": {
      "post": {
        "tags": [
          "Spherefiles",
          "Customer"
        ],
        "summary": "Bootpod",
        "description": "Bootpod",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Boot Pod Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.BootPodRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.BootPodResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/spherefiles/delete-file": {
      "post": {
        "tags": [
          "Spherefiles",
          "Customer"
        ],
        "summary": "Delete a folder or file",
        "description": "This endpoint is used to delete a folder or file",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Folder Details Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.FileFolderDetailsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/spherefiles/download-file": {
      "get": {
        "tags": [
          "Spherefiles",
          "Customer"
        ],
        "summary": "Download an file(UI)",
        "description": "Download an file from the path Using query",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "description": "Path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environment_id",
            "in": "query",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spherestor_id",
            "in": "query",
            "description": "Spherestor Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/spherefiles/folder-details": {
      "post": {
        "tags": [
          "Spherefiles",
          "Customer"
        ],
        "summary": "Get details of a folder or file",
        "description": "This endpoint is used to get the details of a folder or file",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Folder Details Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.FileFolderDetailsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.FileFolderDetailsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/spherefiles/list-contents": {
      "post": {
        "tags": [
          "Customer",
          "Spherefiles"
        ],
        "summary": "listSphereFilesContent",
        "description": "List Sphere files content",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List Sphere files content",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.ListPVCContentsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.ListPVCContentsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/spherefiles/new-folder": {
      "post": {
        "tags": [
          "Spherefiles",
          "Customer"
        ],
        "summary": "Create a new folder",
        "description": "This endpoint is used to create a new folder on the path",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New Folder Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.NewFolderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/spherefiles/rename": {
      "post": {
        "tags": [
          "Spherefiles",
          "Customer"
        ],
        "summary": "Rename a folder or file",
        "description": "This endpoint is used to rename a folder or file",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Folder Details Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.RenameFileFolderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/spherefiles/tar-file": {
      "post": {
        "tags": [
          "Spherefiles",
          "Customer"
        ],
        "summary": "Tar a file",
        "description": "This endpoint is used to tar a file",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Tar File Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.UntarFileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/spherefiles/untar-file": {
      "post": {
        "tags": [
          "Spherefiles",
          "Customer"
        ],
        "summary": "Untar a file",
        "description": "This endpoint is used to untar a file",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Untar File Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.UntarFileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/spherefiles/upload-file": {
      "post": {
        "tags": [
          "Spherefiles",
          "Customer"
        ],
        "summary": "Upload a file to PVC",
        "description": "Upload a file to a Kubernetes PVC with additional metadata",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "description": "Path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environment_id",
            "in": "query",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spherestor_id",
            "in": "query",
            "description": "SphereStor Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "File to upload",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sphereops/build-logs/": {
      "get": {
        "tags": [
          "SphereOps",
          "Customer"
        ],
        "summary": "SphereOps Build Service",
        "description": "SphereOps Build Logs Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_ids",
            "in": "query",
            "description": "deployment ids",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "StartTime",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Start Time(format: 2006-01-02T15:04:05Z)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "End Time(format: 2006-01-02T15:04:05Z)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SphereOpsResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sphereops/config": {
      "get": {
        "tags": [
          "SphereOps",
          "Customer"
        ],
        "summary": "SphereOps Config Service",
        "description": "SphereOps Logs Service",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SphereOpsResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "SphereOps",
          "Customer"
        ],
        "summary": "SphereOps Update Service",
        "description": "Update SphereOps configuration",
        "requestBody": {
          "description": "Update SphereOps",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.SphereOpsExtra"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SphereOpsResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/sphereops/cpu": {
      "get": {
        "tags": [
          "SphereOps",
          "Customer"
        ],
        "summary": "SphereOps CPU Service",
        "description": "SphereOps CPU Metrix Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_ids",
            "in": "query",
            "description": "deployment ids",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Start Time(format: 2006-01-02T15:04:05Z)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "End Time(format: 2006-01-02T15:04:05Z)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SphereOpsCpuResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sphereops/deploy-logs": {
      "get": {
        "tags": [
          "SphereOps",
          "Customer"
        ],
        "summary": "SphereOps Logs Service",
        "description": "Deploy Logs Metrix Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_ids",
            "in": "query",
            "description": "deployment ids",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Start Time(format: 2006-01-02T15:04:05Z)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "End Time(format: 2006-01-02T15:04:05Z)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SphereOpsResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sphereops/deployment/list": {
      "get": {
        "tags": [
          "SphereOps",
          "Customer"
        ],
        "summary": "SphereOps Get Service",
        "description": "SphereOps Get Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "env_ids",
            "in": "query",
            "description": "Environment Ids",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SphereOpsResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sphereops/env/list": {
      "get": {
        "tags": [
          "SphereOps",
          "Customer"
        ],
        "summary": "SphereOps Get Service",
        "description": "SphereOps Get Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SphereOpsResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sphereops/memory": {
      "get": {
        "tags": [
          "SphereOps",
          "Customer"
        ],
        "summary": "SphereOps Memory Service",
        "description": "SphereOps Memory Metrix Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_ids",
            "in": "query",
            "description": "deployment ids",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Start Time(format: 2006-01-02T15:04:05Z)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "End Time(format: 2006-01-02T15:04:05Z)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SphereOpsMemoryResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sphereops/runtime-logs/": {
      "get": {
        "tags": [
          "SphereOps",
          "Customer"
        ],
        "summary": "SphereOps Build Service",
        "description": "SphereOps Build Logs Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_ids",
            "in": "query",
            "description": "deployment ids",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Start Time(format: 2006-01-02T15:04:05Z)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "End Time(format: 2006-01-02T15:04:05Z)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SphereOpsResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sphereops/spherelets-usage": {
      "get": {
        "tags": [
          "SphereOps",
          "Customer"
        ],
        "summary": "SphereOps Spherelets Service",
        "description": "SphereOps Spherelets Metrix Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_ids",
            "in": "query",
            "description": "deployment ids",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Start Time(format: 2006-01-02T15:04:05Z)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "End Time(format: 2006-01-02T15:04:05Z)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SphereOpsMemoryResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sphereops/storage-usage": {
      "get": {
        "tags": [
          "SphereOps",
          "Customer"
        ],
        "summary": "SphereOps StorageUsage Service",
        "description": "SphereOps StorageUsage Metrix Service",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_ids",
            "in": "query",
            "description": "deployment ids",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Start Time(format: 2006-01-02T15:04:05Z)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "End Time(format: 2006-01-02T15:04:05Z)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SphereOpsCpuResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/spheres/count": {
      "get": {
        "tags": [
          "Sphere"
        ],
        "summary": "Total Sphere Count",
        "description": "Total Sphere Count of Project, Service, Deployment and User",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_id",
            "in": "query",
            "description": "Deployment Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "description": "Service Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "Project Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/model.SphereCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sphereshells/get-url": {
      "post": {
        "tags": [
          "Customer",
          "Sphereshell"
        ],
        "summary": "Generate Token Url",
        "description": "Generate Token Url",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request Token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shell.RequestToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.SphereshellTokenURl"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/sphereshells/{id}/list-containers": {
      "get": {
        "tags": [
          "Customer",
          "Sphereshell"
        ],
        "summary": "List Containers of a deployment",
        "description": "List Containers of a deployment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/model.ContainerListResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/spherestor/{eid}": {
      "post": {
        "tags": [
          "Spherestor",
          "Customer"
        ],
        "summary": "Create Spherestor",
        "description": "Create Spherestor with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eid",
            "in": "path",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create Spherestor",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.SpherestorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.EnvironmentSpherestorResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/spherestor/{eid}/env": {
      "get": {
        "tags": [
          "Spherestor",
          "Customer"
        ],
        "summary": "get Spherestor",
        "description": "get Spherestor with the input id",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eid",
            "in": "path",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.EnvironmentSpherestorListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/spherestor/{eid}/stor/{spherestorId}": {
      "put": {
        "tags": [
          "Spherestor",
          "Customer"
        ],
        "summary": "Update Spherestor",
        "description": "Update Spherestor with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eid",
            "in": "path",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spherestorId",
            "in": "path",
            "description": "Stor Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create Spherestor",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.SpherestorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.EnvironmentSpherestorResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Spherestor",
          "Customer"
        ],
        "summary": "Delete Spherestor",
        "description": "Delete Spherestor with the input id",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eid",
            "in": "path",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spherestorId",
            "in": "path",
            "description": "Stor Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/spherestor/{eid}/stor/{spherestorId}/paginate": {
      "get": {
        "tags": [
          "Spherestor",
          "Customer"
        ],
        "summary": "list services that use spherestor",
        "description": "List Spherestor with the input id",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eid",
            "in": "path",
            "description": "Environment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spherestorId",
            "in": "path",
            "description": "Stor Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/status": {
      "get": {
        "tags": [
          "Deployment",
          "Customer"
        ],
        "summary": "Get Deployment Status",
        "description": "Get Deployment status for service, environment and project in websocket",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Access Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_id",
            "in": "query",
            "description": "Deployment Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "description": "Service Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "Project Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "Subscription",
          "Customer"
        ],
        "summary": "List Subscription",
        "description": "List Subscription",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "Country Code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency_code",
            "in": "query",
            "description": "Currency Code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SubscriptionWithPlanListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/subscriptions/category-details": {
      "get": {
        "tags": [
          "Subscription",
          "Customer"
        ],
        "summary": "List Subscription",
        "description": "List Subscription",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "Country Code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency_code",
            "in": "query",
            "description": "Currency Code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SubscriptionWithPlanListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/subscriptions/features/list": {
      "get": {
        "tags": [
          "SubscriptionFeature"
        ],
        "summary": "List Subscription Feature",
        "description": "List Subscription Feature",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accessibility",
            "in": "query",
            "description": "Accessibility Tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Slug",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/model.SubscriptionFeatureResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/subscriptions/{id}/items": {
      "get": {
        "tags": [
          "SubscriptionItem"
        ],
        "summary": "List Subscription Items",
        "description": "List Subscription Items",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Subscription id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Slug",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.SubscriptionItemListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/teams": {
      "get": {
        "tags": [
          "Team",
          "Customer"
        ],
        "summary": "List Team",
        "description": "List Team",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "Country Code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency_code",
            "in": "query",
            "description": "Currency Code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort-Column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort-Direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.TeamListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Team",
          "Customer"
        ],
        "summary": "Create Team",
        "description": "Create Team",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create Team",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.TeamRequestPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/teams/projects": {
      "post": {
        "tags": [
          "Team",
          "Customer"
        ],
        "summary": "Add Project to Team",
        "description": "Add Project to the Team",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Add project to the Team",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.TeamProjectWithPermissionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/model.TeamProjectWithPermissionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/teams/{id}": {
      "get": {
        "tags": [
          "Team",
          "Customer"
        ],
        "summary": "Get Team",
        "description": "Get Team from Id",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.TeamResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Team",
          "Customer"
        ],
        "summary": "Update Team",
        "description": "Update Team with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Team id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Team",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.TeamRequestPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.TeamResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Team",
          "Customer"
        ],
        "summary": "Delete Team",
        "description": "Delete Team with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Team id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/teams/{id}/projects": {
      "get": {
        "tags": [
          "Team",
          "Customer"
        ],
        "summary": "List Team Projects",
        "description": "List Team Projects with role",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.TeamProjectWithRoleResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/teams/{id}/projects/{pid}": {
      "put": {
        "tags": [
          "Team",
          "Customer"
        ],
        "summary": "Update Team Project Role",
        "description": "Update Team Project Role with the input payload",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Team id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pid",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Update Team",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.TeamProjectWithPermissionUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.TeamResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Team",
          "Customer"
        ],
        "summary": "Remove Project From Team",
        "description": "Remove Project from the Team",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Team id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pid",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/teams/{id}/users": {
      "post": {
        "tags": [
          "Team",
          "Customer"
        ],
        "summary": "Add User to Team",
        "description": "Add user to the Team",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Team id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Udpate Team User",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.TeamUpdateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/teams/{id}/users/{uid}": {
      "delete": {
        "tags": [
          "Team",
          "Customer"
        ],
        "summary": "Remove User from Team",
        "description": "Remove user from the Team",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "Account Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Team id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User",
          "Customer"
        ],
        "summary": "Post Login Endpoint",
        "description": "This endpoint is used for creating new user if not exist and log the IP details.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.LoginResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/users/accounts": {
      "get": {
        "tags": [
          "User",
          "Customer"
        ],
        "summary": "List Account By User",
        "description": "List Account By User",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.AccountResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/users/change-password": {
      "post": {
        "tags": [
          "User",
          "Customer"
        ],
        "summary": "Endpoint to change user password",
        "description": "This endpoint is used to change user password",
        "requestBody": {
          "description": "Change User Password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.ChangePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/users/cli/otp-validate": {
      "post": {
        "tags": [
          "User",
          "Customer"
        ],
        "summary": "Validate OTP",
        "description": "Validate OTP",
        "requestBody": {
          "description": "Verify OTP",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/model.VerifyOTPRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ValidateOtpSwaggerresponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/users/cli/register": {
      "post": {
        "tags": [
          "User",
          "Customer"
        ],
        "summary": "Post Signup User",
        "description": "This endpoint is used for creating new user if not exist and log the IP details.",
        "requestBody": {
          "description": "Create User",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.CliSignup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.CliUserRegisterResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/users/cli/register-init": {
      "post": {
        "tags": [
          "User",
          "Customer"
        ],
        "summary": "Create Email OTP",
        "description": "Create Email OTP",
        "requestBody": {
          "description": "Email OTP",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.EmailOTPRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.EmailOTPResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "User",
          "Customer"
        ],
        "summary": "Test Login endpoint for swagger",
        "description": "This endpoint is used by swagger API only for generating token",
        "requestBody": {
          "description": "Login User",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.LoginResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/users/projects": {
      "get": {
        "tags": [
          "User",
          "Customer"
        ],
        "summary": "List Project By User",
        "description": "List Project By User",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.ProjectResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/users/search-history": {
      "get": {
        "tags": [
          "User",
          "Customer"
        ],
        "summary": "List User",
        "description": "List User",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringListResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/users/theme": {
      "put": {
        "tags": [
          "User",
          "Customer"
        ],
        "summary": "Endpoint to change user theme",
        "description": "This endpoint is used to change user theme",
        "requestBody": {
          "description": "Change User Theme",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.UserThemeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/users/update-url": {
      "put": {
        "tags": [
          "User",
          "Customer"
        ],
        "summary": "Endpoint to upload user profile url to database",
        "description": "This endpoint is used to upload user profile",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Upload User Profile Url",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/model.UserProfileUrlRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/users/uploads": {
      "post": {
        "tags": [
          "User",
          "Customer"
        ],
        "summary": "Endpoint to upload user profile",
        "description": "This endpoint is used to upload user profile",
        "parameters": [
          {
            "name": "x-user-token",
            "in": "header",
            "description": "User Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "File to upload",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/swagger.StringResponseSwagger"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "model.Accessibility": {
        "type": "string",
        "enum": [
          "general",
          "private",
          "public",
          "disabled"
        ],
        "x-enum-varnames": [
          "General",
          "Private",
          "Public",
          "Disable"
        ]
      },
      "model.AccountOverview": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "account_name": {
            "type": "string"
          },
          "deployment_count": {
            "type": "integer"
          },
          "project_count": {
            "type": "integer"
          },
          "recent_deployments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.DeploymentResponse"
            }
          },
          "recent_projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.ProjectResponse"
            }
          },
          "total_spherelet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SphereletResource"
            }
          },
          "total_spherelet_usage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SphereletResource"
            }
          },
          "total_spherestor_count": {
            "type": "integer"
          },
          "total_spherestor_usage": {
            "type": "integer"
          }
        }
      },
      "model.AccountResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "available_spherestor": {
            "$ref": "#/components/schemas/model.SpherestorResource"
          },
          "country": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "feature": {
            "$ref": "#/components/schemas/model.FeatureTrackingResponse"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "payment_status": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "spherestor_count": {
            "type": "integer"
          },
          "subscription": {
            "$ref": "#/components/schemas/model.SubscriptionWithPlanQtyResponse"
          },
          "subscription_id": {
            "type": "string"
          },
          "total_spherelet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SphereletResource"
            }
          },
          "user": {
            "$ref": "#/components/schemas/model.UserResponse"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "model.AccountUpdateRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "country": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "model.AccountUserWithPermissionRequestPayload": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "user_email": {
            "type": "string"
          }
        }
      },
      "model.AccountUserWithPermissionResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "user_email": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "model.AccountUserWithPermissionUpdateAllRequest": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "model.AccountUserWithPermissionUpdateRequest": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          }
        }
      },
      "model.AccountUserWithRole": {
        "type": "object",
        "properties": {
          "expires_at": {
            "type": "string"
          },
          "last_invited_at": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/model.UserResponse"
          }
        }
      },
      "model.AccoutModel": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/model.NameModel"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "model.ActivityResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "module": {
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "remarks": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "model.AlertNotification": {
        "type": "object",
        "properties": {
          "email_enabled": {
            "type": "boolean"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webhook_enabled": {
            "type": "boolean"
          },
          "webhooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.WebHooks"
            }
          }
        }
      },
      "model.AlertRuleRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "alert_type": {
            "type": "string",
            "description": "cpu, memory, disk"
          },
          "environment_id": {
            "type": "string"
          },
          "evaluation_period": {
            "type": "integer",
            "description": "seconds"
          },
          "project_id": {
            "type": "string"
          },
          "severity_level": {
            "type": "string",
            "description": "low, medium, high"
          },
          "threshold": {
            "type": "integer",
            "description": "percentange"
          }
        }
      },
      "model.AlertRuleResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "alert_type": {
            "type": "string",
            "description": "cpu, memory, disk"
          },
          "created_at": {
            "type": "string"
          },
          "environment_id": {
            "type": "string"
          },
          "evaluation_period": {
            "type": "integer",
            "description": "seconds"
          },
          "id": {
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "severity_level": {
            "type": "string",
            "description": "low, medium, hig"
          },
          "status": {
            "type": "string"
          },
          "threshold": {
            "type": "integer",
            "description": "percentange"
          }
        }
      },
      "model.AlertRuleUpdateRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "alert_type": {
            "type": "string",
            "description": "cpu, memory, disk"
          },
          "environment_id": {
            "type": "string"
          },
          "evaluation_period": {
            "type": "integer",
            "description": "seconds"
          },
          "severity_level": {
            "type": "string",
            "description": "low, medium, high"
          },
          "threshold": {
            "type": "integer",
            "description": "percentange"
          }
        }
      },
      "model.ApiTokenRequestPayload": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "account_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expiry": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "project_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scope": {
            "type": "string",
            "description": "full, account, project"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "model.ApiTokenResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "account_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.NameModel"
            }
          },
          "created_at": {
            "type": "string"
          },
          "expiry": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "project_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.AccoutModel"
            }
          },
          "scope": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "model.AuditLogsResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "checked_on": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "violations": {
            "type": "integer"
          }
        }
      },
      "model.AutoScalingConfig": {
        "type": "object",
        "properties": {
          "cpu_utilization": {
            "type": "integer"
          },
          "enabled": {
            "type": "boolean"
          },
          "max_replicas": {
            "type": "integer"
          },
          "min_replicas": {
            "type": "integer"
          }
        }
      },
      "model.BackupRequest": {
        "type": "object",
        "properties": {
          "deployment_id": {
            "type": "string"
          },
          "remarks": {
            "type": "string"
          }
        }
      },
      "model.BackupRequestUpdate": {
        "type": "object",
        "properties": {
          "remarks": {
            "type": "string"
          }
        }
      },
      "model.BackupResponse": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "string"
          },
          "created": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "deployment_id": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preserved": {
            "type": "boolean"
          },
          "remarks": {
            "type": "string"
          },
          "snapshot": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "triggered_by": {
            "type": "string"
          },
          "triggered_by_name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "model.BackupScheduleRequest": {
        "type": "object",
        "properties": {
          "deployment_id": {
            "type": "string"
          },
          "remarks": {
            "type": "string"
          },
          "schedule": {
            "type": "boolean"
          },
          "schedule_time": {
            "type": "string"
          }
        }
      },
      "model.BootPodRequest": {
        "type": "object",
        "properties": {
          "environment_id": {
            "type": "string"
          },
          "spherestor_id": {
            "type": "string"
          }
        }
      },
      "model.BootPodResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "model.CIConfig": {
        "type": "object",
        "properties": {
          "base_image": {
            "type": "string"
          },
          "base_version": {
            "type": "string"
          },
          "build_script": {
            "type": "string"
          },
          "git_branch": {
            "type": "string"
          },
          "git_connection_id": {
            "type": "string"
          },
          "git_password": {
            "type": "string"
          },
          "git_repo_id": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "git_username": {
            "type": "string"
          },
          "start_script": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "webhook_enabled": {
            "type": "boolean"
          },
          "working_dir": {
            "type": "string"
          }
        }
      },
      "model.ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "confirm_password": {
            "type": "string"
          },
          "current_password": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "model.CliSignup": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "otp": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "model.CloneDeploymentRequest": {
        "type": "object",
        "properties": {
          "remarks": {
            "type": "string"
          },
          "target_environment_id": {
            "type": "string"
          },
          "target_project_id": {
            "type": "string"
          },
          "target_service_name": {
            "type": "string"
          }
        }
      },
      "model.CloudwatchCredential": {
        "type": "object",
        "properties": {
          "access_key": {
            "type": "string"
          },
          "bucket": {
            "type": "string"
          },
          "format_type": {
            "type": "string"
          },
          "log_group": {
            "type": "string"
          },
          "log_stream": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "secret_key": {
            "type": "string"
          }
        }
      },
      "model.ClusterPackageRequest": {
        "type": "object",
        "properties": {
          "extras": {
            "type": "object",
            "additionalProperties": true
          },
          "helm_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "values": {
            "type": "object"
          }
        }
      },
      "model.ClusterPackageResponse": {
        "type": "object",
        "properties": {
          "extras": {
            "type": "object",
            "additionalProperties": true
          },
          "helm_url": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_installed": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "values": {
            "type": "object"
          }
        }
      },
      "model.ClusterRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "config": {
            "type": "string"
          },
          "extras": {
            "type": "object",
            "additionalProperties": true
          },
          "name": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        }
      },
      "model.ClusterResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "cluster_packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.ClusterPackageResponse"
            }
          },
          "config": {
            "type": "string"
          },
          "extras": {
            "type": "object",
            "additionalProperties": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        }
      },
      "model.ClusterUpdateRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "extras": {
            "type": "object",
            "additionalProperties": true
          },
          "name": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        }
      },
      "model.ComplianceReportResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "checked_on": {
            "type": "string"
          },
          "compliance_status": {
            "type": "string"
          },
          "guardrail_id": {
            "type": "string"
          },
          "guardrail_rule_audit_reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.GuardrailRuleAuditReportResp"
            }
          },
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "model.ContainerListResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "container_name": {
            "type": "string"
          },
          "pod_name": {
            "type": "string"
          }
        }
      },
      "model.CpuResponseData": {
        "type": "object",
        "properties": {
          "deployment_id": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "cpu_usages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "metric": {
                        "type": "object",
                        "properties": {
                          "container": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        }
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "model.CreateAccountPayloadRequest": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "model.CronJob": {
        "type": "object",
        "properties": {
          "command": {
            "type": "string"
          },
          "schedule": {
            "type": "string"
          },
          "suspend": {
            "type": "boolean"
          }
        }
      },
      "model.CustomDomainCertificate": {
        "type": "object",
        "properties": {
          "certificate": {
            "type": "string"
          },
          "deployment_name": {
            "type": "string"
          },
          "env_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_for_env": {
            "type": "boolean"
          },
          "is_secret_applied": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "not_after": {
            "type": "string"
          },
          "not_before": {
            "type": "string"
          },
          "private_key": {
            "type": "string"
          },
          "renewal_time": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "model.DBConfig": {
        "type": "object",
        "properties": {
          "db_name": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "root_password": {
            "type": "string"
          },
          "storage": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "model.DeploymentCustomDomainUpdateRequest": {
        "type": "object",
        "properties": {
          "certificate": {
            "type": "string"
          },
          "custom_domain": {
            "type": "string"
          },
          "private_key": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "\"letsencrypt\" or \"custom\""
          }
        }
      },
      "model.DeploymentHistorySwaggerResponse": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string"
          },
          "deployment_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_current": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        }
      },
      "model.DeploymentImageUpdateRequest": {
        "type": "object",
        "properties": {
          "image": {
            "$ref": "#/components/schemas/model.Image"
          }
        }
      },
      "model.DeploymentLogsResponse": {
        "type": "object",
        "properties": {
          "deployment_id": {
            "type": "string"
          },
          "environment_name": {
            "type": "string"
          },
          "eventTime": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "involvedObjectKind": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "project_name": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "service_name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "workflow_id": {
            "type": "integer"
          }
        }
      },
      "model.DeploymentPVCRequest": {
        "type": "object",
        "properties": {
          "is_mounted": {
            "type": "boolean",
            "description": "is the pvc mounted"
          },
          "path": {
            "type": "string",
            "description": "path where this pvc will be mounted"
          },
          "storage_size": {
            "type": "string",
            "description": "size of the pvc"
          }
        }
      },
      "model.DeploymentPVCResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "only used for update"
          },
          "is_mounted": {
            "type": "boolean",
            "description": "is the pvc mounted"
          },
          "path": {
            "type": "string",
            "description": "path where this pvc will be mounted"
          },
          "spherestor": {
            "$ref": "#/components/schemas/model.SpherestorResponse"
          },
          "spherestor_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "storage_size": {
            "type": "string",
            "description": "size of the pvc"
          }
        }
      },
      "model.DeploymentPortUpdateRequest": {
        "type": "object",
        "properties": {
          "port": {
            "type": "integer"
          }
        }
      },
      "model.DeploymentResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "auto_scaling_config": {
            "$ref": "#/components/schemas/model.AutoScalingConfig"
          },
          "ci_config": {
            "$ref": "#/components/schemas/model.CIConfig"
          },
          "created_at": {
            "type": "string"
          },
          "cronjob": {
            "$ref": "#/components/schemas/model.CronJob"
          },
          "custom_domain": {
            "type": "string"
          },
          "custom_domain_certificate": {
            "$ref": "#/components/schemas/model.CustomDomainCertificate"
          },
          "db_config": {
            "$ref": "#/components/schemas/model.DBConfig"
          },
          "deployment_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "domain_details": {
            "$ref": "#/components/schemas/model.DomainDetails"
          },
          "domain_path": {
            "type": "string"
          },
          "env_id": {
            "type": "string"
          },
          "environment": {
            "$ref": "#/components/schemas/model.EnvironmentMinResponse"
          },
          "environment_variables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "external_logging": {
            "$ref": "#/components/schemas/model.ExternalLogging"
          },
          "health_check": {
            "$ref": "#/components/schemas/model.HealthCheck"
          },
          "id": {
            "type": "string"
          },
          "image": {
            "$ref": "#/components/schemas/model.Image"
          },
          "image_name": {
            "type": "string"
          },
          "last_opened_at": {
            "type": "string"
          },
          "max_sphere_count": {
            "type": "integer"
          },
          "namespace": {
            "type": "string"
          },
          "network_access": {
            "$ref": "#/components/schemas/model.NetworkAccess"
          },
          "port": {
            "type": "integer"
          },
          "project_id": {
            "type": "string"
          },
          "project_name": {
            "type": "string"
          },
          "scheduled_backup": {
            "$ref": "#/components/schemas/model.ScheduledBackupResponse"
          },
          "secret_variables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "service_id": {
            "type": "string"
          },
          "service_name": {
            "type": "string"
          },
          "service_type": {
            "type": "string"
          },
          "sphere_count": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "status_updated_at": {
            "type": "string"
          },
          "stors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.DeploymentPVCResponse"
            }
          },
          "sub_domain": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "model.DeploymentResult": {
        "type": "object",
        "properties": {
          "custom_domain": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "parent_name": {
            "type": "string"
          },
          "sub_domain": {
            "type": "string"
          }
        }
      },
      "model.DeploymentSecretVariablesUpdateRequest": {
        "type": "object",
        "properties": {
          "secret_variables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "model.DeploymentSphereCountUpdateRequest": {
        "type": "object",
        "properties": {
          "sphere_count": {
            "type": "integer"
          }
        }
      },
      "model.DeploymentVariablesUpdateRequest": {
        "type": "object",
        "properties": {
          "environment_variables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "model.DeploymentWebhookRequest": {
        "type": "object",
        "properties": {
          "deployment_id": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "tag": {
            "type": "string",
            "description": "this should be the git latest rev hash which can than be utilized to pull the image"
          }
        }
      },
      "model.DeviceauthErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "success": {
            "type": "integer"
          }
        }
      },
      "model.DeviceauthLoginRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          }
        }
      },
      "model.DeviceauthLoginResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              }
            }
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "integer"
          }
        }
      },
      "model.DirectoryContent": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string"
          },
          "full_path": {
            "type": "string"
          },
          "is_dir": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "permission": {
            "type": "integer"
          },
          "size": {
            "type": "string"
          }
        }
      },
      "model.DomainDetails": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "custom_domain": {
            "type": "string"
          },
          "domain_path": {
            "type": "string"
          },
          "env_id": {
            "type": "string"
          },
          "env_name": {
            "type": "string"
          },
          "environment": {
            "$ref": "#/components/schemas/model.EnvironmentDomain"
          },
          "expiry_date": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "project_name": {
            "type": "string"
          },
          "request_raised": {
            "type": "boolean"
          },
          "service_id": {
            "type": "string"
          },
          "service_name": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "sub_domain": {
            "type": "string"
          }
        }
      },
      "model.DomainPathRequest": {
        "type": "object",
        "properties": {
          "deployment_id": {
            "type": "string"
          },
          "patch": {
            "type": "boolean"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "model.DomainPathResponse": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "model.ElasticCredential": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "port": {
            "type": "string"
          },
          "scheme": {
            "type": "string"
          },
          "ssl_verify": {
            "type": "boolean"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "model.EmailOTPRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "model.EmailOTPResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "model.EnvSubDomain": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "model.EnvironmentCustomDomainUpdateRequest": {
        "type": "object",
        "properties": {
          "certificate": {
            "type": "string"
          },
          "custom_domain": {
            "type": "string"
          },
          "private_key": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "\"letsencrypt\" or \"custom\""
          }
        }
      },
      "model.EnvironmentDomain": {
        "type": "object",
        "properties": {
          "custom_domain": {
            "type": "string"
          },
          "domain_path": {
            "type": "string"
          },
          "sub_domain": {
            "type": "string"
          }
        }
      },
      "model.EnvironmentMinResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "custom_domain": {
            "type": "string"
          },
          "domain_details": {
            "$ref": "#/components/schemas/model.DomainDetails"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "project_name": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "sub_domain": {
            "type": "string"
          }
        }
      },
      "model.EnvironmentPVC": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "mount_path": {
            "type": "string"
          }
        }
      },
      "model.EnvironmentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "network_access": {
            "$ref": "#/components/schemas/model.NetworkAccess"
          },
          "network_policy": {
            "$ref": "#/components/schemas/model.NetworkPolicy"
          },
          "project_id": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        }
      },
      "model.EnvironmentResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string"
          },
          "custom_domain": {
            "type": "string"
          },
          "custom_domain_certificate": {
            "$ref": "#/components/schemas/model.CustomDomainCertificate"
          },
          "deployment_count": {
            "type": "integer"
          },
          "deployments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.DeploymentResponse"
            }
          },
          "domain_details": {
            "$ref": "#/components/schemas/model.DomainDetails"
          },
          "domain_path": {
            "$ref": "#/components/schemas/model.DomainPathResponse"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "network_access": {
            "$ref": "#/components/schemas/model.NetworkAccess"
          },
          "network_policy": {
            "$ref": "#/components/schemas/model.NetworkPolicy"
          },
          "project_id": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "sub_domain": {
            "type": "string"
          }
        }
      },
      "model.EnvironmentUpdateRequest": {
        "type": "object",
        "properties": {
          "cluster_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "network_policy": {
            "$ref": "#/components/schemas/model.NetworkPolicy"
          }
        }
      },
      "model.ErrorDataResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "error_code": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "model.ExternalLogging": {
        "type": "object",
        "properties": {
          "additional_setting": {
            "type": "object",
            "additionalProperties": true
          },
          "cloudwatch_credential": {
            "$ref": "#/components/schemas/model.CloudwatchCredential"
          },
          "elastic_credential": {
            "$ref": "#/components/schemas/model.ElasticCredential"
          },
          "enabled": {
            "type": "boolean"
          },
          "gcp_credential": {
            "$ref": "#/components/schemas/model.GCPCredential"
          },
          "kafka_credential": {
            "$ref": "#/components/schemas/model.KafkaCredential"
          },
          "loki_credential": {
            "$ref": "#/components/schemas/model.LokiCredential"
          },
          "provider": {
            "type": "string"
          },
          "s3_credential": {
            "$ref": "#/components/schemas/model.S3Credential"
          }
        }
      },
      "model.Extras": {
        "type": "object",
        "properties": {
          "accept": {
            "type": "string"
          },
          "deployment_id": {
            "type": "string"
          },
          "environment_id": {
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "reject": {
            "type": "string"
          },
          "service_id": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          }
        }
      },
      "model.FeatureAccessibilityRequest": {
        "type": "object",
        "properties": {
          "accessibility": {
            "type": "string",
            "default": "general"
          }
        }
      },
      "model.FeatureTrackingResponse": {
        "type": "object",
        "properties": {
          "accessbility": {
            "type": "string",
            "default": "general"
          },
          "account_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "model.FeedBackCategoryResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "issue_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "model.FeedbackRequest": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "model.FeedbackResponse": {
        "type": "object",
        "properties": {
          "issue_id": {
            "type": "string"
          }
        }
      },
      "model.FileFolderDetailsRequest": {
        "type": "object",
        "properties": {
          "environment_id": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "spherestor_id": {
            "type": "string"
          }
        }
      },
      "model.FileFolderDetailsResponse": {
        "type": "object",
        "properties": {
          "access_time": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "is_dir": {
            "type": "boolean"
          },
          "modified_time": {
            "type": "string"
          },
          "size": {
            "type": "string"
          }
        }
      },
      "model.GCPCredential": {
        "type": "object",
        "properties": {
          "bucket": {
            "type": "string"
          },
          "key_file": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "project": {
            "type": "string"
          },
          "store_as": {
            "type": "string"
          }
        }
      },
      "model.GitConnectionRequest": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "model.GitConnectionResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "project_count": {
            "type": "integer"
          },
          "service_count": {
            "type": "integer"
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.GitServiceResponse"
            }
          },
          "type": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "model.GitServiceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "project_name": {
            "type": "string"
          },
          "service_name": {
            "type": "string"
          },
          "service_type": {
            "type": "string"
          }
        }
      },
      "model.GuardrailCheckField": {
        "type": "object",
        "properties": {
          "field_name": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        }
      },
      "model.GuardrailPayload": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "effect": {
            "type": "string",
            "description": "block / warn"
          },
          "message": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scope": {
            "type": "string",
            "description": "project / env / service"
          },
          "status": {
            "type": "boolean",
            "description": "active / inactive"
          },
          "type": {
            "type": "string",
            "description": "predefined / custom"
          }
        }
      },
      "model.GuardrailResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "effect": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_predefined_assigned": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.GuardrailSingleRuleResponse"
            }
          },
          "scope": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "model.GuardrailRuleAuditReportResp": {
        "type": "object",
        "properties": {
          "guard_rule_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "model.GuardrailRulePayload": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        }
      },
      "model.GuardrailSingleRuleResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "metrics": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        }
      },
      "model.HealthCheck": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "initial_delay_seconds": {
            "type": "integer"
          },
          "path": {
            "type": "string"
          },
          "period_seconds": {
            "type": "integer"
          },
          "port": {
            "type": "integer"
          }
        }
      },
      "model.Image": {
        "type": "object",
        "properties": {
          "access_key": {
            "type": "string"
          },
          "gcp_credentials": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "secret_key": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "model.InAppNotificationReadCount": {
        "type": "object",
        "properties": {
          "read": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "unread": {
            "type": "integer"
          }
        }
      },
      "model.InAppNotificationResponse": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "extras": {
            "$ref": "#/components/schemas/model.Extras"
          },
          "id": {
            "type": "string"
          },
          "module": {
            "type": "string"
          },
          "module_id": {
            "type": "string"
          },
          "notication_level": {
            "type": "string",
            "description": "supported levels are info, error, warning, success"
          },
          "seen": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "triggered_by": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "user_email": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "model.InvoiceItemRequest": {
        "type": "object",
        "properties": {
          "product": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "model.InvoiceItemResponse": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "invoice_id": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "rate": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "model.InvoiceRequestPayload": {
        "type": "object",
        "properties": {
          "customer_name": {
            "type": "string"
          },
          "invoice_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.InvoiceItemRequest"
            }
          },
          "subscription_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "model.InvoiceResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "created_at": {
            "type": "string"
          },
          "customer_address": {
            "type": "string"
          },
          "customer_name": {
            "type": "string"
          },
          "discount": {
            "type": "number"
          },
          "id": {
            "type": "string"
          },
          "invoice_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.InvoiceItemResponse"
            }
          },
          "is_paid": {
            "type": "boolean"
          },
          "service_charge": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "subscription_id": {
            "type": "string"
          },
          "tax": {
            "type": "number"
          },
          "tax_id": {
            "type": "string"
          },
          "taxable_amount": {
            "type": "number"
          },
          "total_amount": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "model.InvoiceUpdatePayload": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "supported status are : active, cancelled"
          }
        }
      },
      "model.KafkaCredential": {
        "type": "object",
        "properties": {
          "default_topic": {
            "type": "string"
          },
          "format_type": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "sasl_over_ssl": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "model.Label": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "model.ListPVCContentsRequest": {
        "type": "object",
        "properties": {
          "environment_id": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "spherestor_id": {
            "type": "string"
          }
        }
      },
      "model.ListPVCContentsResponse": {
        "type": "object",
        "properties": {
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.DirectoryContent"
            }
          }
        }
      },
      "model.LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "model.LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/model.UserResponse"
          }
        }
      },
      "model.LokiCredential": {
        "type": "object",
        "properties": {
          "extra_labels": {
            "$ref": "#/components/schemas/model.Label"
          },
          "host": {
            "type": "string"
          },
          "kubernetes_labels": {
            "type": "boolean"
          },
          "labels": {
            "$ref": "#/components/schemas/model.Label"
          },
          "line_format": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "tenant": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "model.MarkInAppNotificationRequestPayload": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "model.MemoryResponseData": {
        "type": "object",
        "properties": {
          "deployment_id": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "memory_usages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "metric": {
                        "type": "object",
                        "properties": {
                          "container": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        }
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "model.NameModel": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "model.NetworkAccess": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "public_access, restricted_access"
          },
          "whitelisted_ips": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "model.NetworkPolicy": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "model.NewFolderRequest": {
        "type": "object",
        "properties": {
          "environment_id": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "spherestor_id": {
            "type": "string"
          }
        }
      },
      "model.NewMountSpherestorReq": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          }
        }
      },
      "model.NotificationSettingRequestPayload": {
        "type": "object",
        "properties": {
          "activity": {
            "type": "boolean"
          },
          "billing": {
            "type": "boolean"
          },
          "deployment": {
            "type": "boolean"
          },
          "email_enabled": {
            "type": "boolean"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inapp_enabled": {
            "type": "boolean"
          },
          "invites": {
            "type": "boolean"
          },
          "payment": {
            "type": "boolean"
          },
          "webhook_enabled": {
            "type": "boolean"
          },
          "webhooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.WebHooks"
            }
          }
        }
      },
      "model.NotificationSettingResponse": {
        "type": "object",
        "properties": {
          "activity": {
            "type": "boolean"
          },
          "billing": {
            "type": "boolean"
          },
          "deployment": {
            "type": "boolean"
          },
          "email_enabled": {
            "type": "boolean"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "inapp_enabled": {
            "type": "boolean"
          },
          "invites": {
            "type": "boolean"
          },
          "payment": {
            "type": "boolean"
          },
          "user_id": {
            "type": "string"
          },
          "webhook_enabled": {
            "type": "boolean"
          },
          "webhooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.WebHooks"
            }
          }
        }
      },
      "model.PaymentFreeResponse": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "invoice_id": {
            "type": "string"
          }
        }
      },
      "model.PaymentGatewayCredentials": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "token": {
            "type": "string",
            "description": "token or secret key or private key"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "model.PaymentGatewayRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "country": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "extras": {
            "type": "object"
          },
          "failure_url": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "init_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "payment_gateway_credentials": {
            "$ref": "#/components/schemas/model.PaymentGatewayCredentials"
          },
          "payment_url": {
            "type": "string"
          },
          "success_url": {
            "type": "string"
          }
        }
      },
      "model.PaymentGatewayResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "country": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "extras": {
            "type": "object"
          },
          "failure_url": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "init_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "payment_gateway_credentials": {
            "$ref": "#/components/schemas/model.PaymentGatewayCredentials"
          },
          "payment_url": {
            "type": "string"
          },
          "success_url": {
            "type": "string"
          }
        }
      },
      "model.PaymentHistoryResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "created_id": {
            "type": "string"
          },
          "gateway_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "invoice": {
            "$ref": "#/components/schemas/model.InvoiceResponse"
          },
          "invoice_id": {
            "type": "string"
          },
          "transaction_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "model.PaymentRequest": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string"
          },
          "gateway_id": {
            "type": "string",
            "description": "set non-zero positive value to override default gateway"
          },
          "invoice_id": {
            "type": "string"
          }
        }
      },
      "model.PlanRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "core": {
            "type": "integer"
          },
          "country_code": {
            "type": "string"
          },
          "currency_code": {
            "type": "string"
          },
          "memory": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "slug": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "model.PlanResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "core": {
            "type": "integer"
          },
          "country_code": {
            "type": "string"
          },
          "currency_code": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "memory": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "slug": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "model.PlanWithQtyResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "core": {
            "type": "integer"
          },
          "country_code": {
            "type": "string"
          },
          "currency_code": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "memory": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "qty": {
            "type": "integer",
            "description": "available quantity"
          },
          "slug": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "model.PluginRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "base_image": {
            "type": "string"
          },
          "base_version": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "model.PluginResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "base_image": {
            "type": "string"
          },
          "base_version": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "model.ProjectAlertUpdate": {
        "type": "object",
        "properties": {
          "alert_enabled": {
            "type": "boolean"
          }
        }
      },
      "model.ProjectRequestPayload": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "plan_name": {
            "type": "string"
          },
          "plan_value": {
            "type": "integer"
          }
        }
      },
      "model.ProjectResponse": {
        "type": "object",
        "properties": {
          "account": {
          },
          "account_id": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "alert_enabled": {
            "type": "boolean"
          },
          "alert_notification": {
          },
          "available_plan_value": {
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "deployment_count": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "last_opened_at": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "plan": {
          },
          "plan_id": {
            "type": "string"
          },
          "plan_value": {
            "type": "integer"
          },
          "service_count": {
            "type": "integer"
          },
          "sphere_count": {
            "type": "integer"
          },
          "spherestor_used": {
            "type": "integer"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "model.ProjectUpdatePayload": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "plan_value": {
            "type": "integer"
          }
        }
      },
      "model.RegistryUserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "model.RenameFileFolderRequest": {
        "type": "object",
        "properties": {
          "environment_id": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "rename_path": {
            "type": "string"
          },
          "spherestor_id": {
            "type": "string"
          }
        }
      },
      "model.RepoListResponse": {
        "type": "object",
        "properties": {
          "full_name": {
            "type": "string"
          },
          "is_private": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "repo_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "workspace": {
            "type": "string"
          }
        }
      },
      "model.ResourceHistoryResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "spherelet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SphereletResource"
            }
          },
          "spherestor": {
            "$ref": "#/components/schemas/model.SpherestorResource"
          },
          "subscription": {
            "$ref": "#/components/schemas/model.SubscriptionResource"
          },
          "total_spherelet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SphereletResource"
            }
          },
          "total_spherestor": {
            "$ref": "#/components/schemas/model.SpherestorResource"
          }
        }
      },
      "model.ResourceUsageHistory": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "current": {
            "$ref": "#/components/schemas/model.SingleResourceHistory"
          },
          "month": {
            "type": "integer"
          },
          "month_start": {
            "$ref": "#/components/schemas/model.SingleResourceHistory"
          },
          "usage": {
            "$ref": "#/components/schemas/model.SingleResourceHistory"
          }
        }
      },
      "model.RestoreRequest": {
        "required": [
          "backup_id"
        ],
        "type": "object",
        "properties": {
          "backup_id": {
            "type": "string"
          },
          "deployment_id": {
            "type": "string"
          },
          "target_environment_id": {
            "type": "string"
          },
          "target_project_id": {
            "type": "string"
          },
          "target_service_name": {
            "type": "string"
          }
        }
      },
      "model.RestoreResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "model.ResultCounts": {
        "type": "object",
        "properties": {
          "deployment_count": {
            "type": "integer"
          },
          "environment_count": {
            "type": "integer"
          },
          "project_count": {
            "type": "integer"
          },
          "service_count": {
            "type": "integer"
          },
          "team_count": {
            "type": "integer"
          }
        }
      },
      "model.S3Credential": {
        "type": "object",
        "properties": {
          "access_key": {
            "type": "string"
          },
          "bucket": {
            "type": "string"
          },
          "format_type": {
            "type": "string"
          },
          "log_group": {
            "type": "string"
          },
          "log_stream": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "secret_key": {
            "type": "string"
          }
        }
      },
      "model.ScheduledBackupResponse": {
        "type": "object",
        "properties": {
          "deployment_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "remarks": {
            "type": "string"
          },
          "schedule": {
            "type": "boolean"
          },
          "schedule_time": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "model.SearchResult": {
        "type": "object",
        "properties": {
          "counts": {
            "$ref": "#/components/schemas/model.ResultCounts"
          },
          "deployments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.DeploymentResult"
            }
          },
          "environments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SimpleResult"
            }
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SimpleResult"
            }
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SimpleResult"
            }
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SimpleResult"
            }
          }
        }
      },
      "model.ServiceReDeployRequest": {
        "type": "object",
        "properties": {
          "auto_scaling_config": {
            "$ref": "#/components/schemas/model.AutoScalingConfig"
          },
          "ci_config": {
            "$ref": "#/components/schemas/model.CIConfig"
          },
          "cronjob": {
            "$ref": "#/components/schemas/model.CronJob"
          },
          "db_config": {
            "$ref": "#/components/schemas/model.DBConfig"
          },
          "env_id": {
            "type": "string"
          },
          "environment_spherestor": {
            "$ref": "#/components/schemas/model.EnvironmentPVC"
          },
          "environment_variables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "external_logging": {
            "$ref": "#/components/schemas/model.ExternalLogging"
          },
          "extras": {
            "type": "object"
          },
          "health_check": {
            "$ref": "#/components/schemas/model.HealthCheck"
          },
          "image": {
            "$ref": "#/components/schemas/model.Image"
          },
          "image_name": {
            "type": "string"
          },
          "network_access": {
            "$ref": "#/components/schemas/model.NetworkAccess"
          },
          "port": {
            "type": "integer"
          },
          "pvc": {
            "$ref": "#/components/schemas/model.DeploymentPVCRequest"
          },
          "secret_variables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "sphere_count": {
            "type": "integer"
          }
        }
      },
      "model.ServiceRequest": {
        "type": "object",
        "properties": {
          "auto_scaling_config": {
            "$ref": "#/components/schemas/model.AutoScalingConfig"
          },
          "ci_config": {
            "$ref": "#/components/schemas/model.CIConfig"
          },
          "cronjob": {
            "$ref": "#/components/schemas/model.CronJob"
          },
          "db_config": {
            "$ref": "#/components/schemas/model.DBConfig"
          },
          "env_id": {
            "type": "string"
          },
          "environment_spherestor": {
            "$ref": "#/components/schemas/model.EnvironmentPVC"
          },
          "environment_variables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "external_logging": {
            "$ref": "#/components/schemas/model.ExternalLogging"
          },
          "extras": {
            "type": "object"
          },
          "health_check": {
            "$ref": "#/components/schemas/model.HealthCheck"
          },
          "image": {
            "$ref": "#/components/schemas/model.Image"
          },
          "image_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "network_access": {
            "$ref": "#/components/schemas/model.NetworkAccess"
          },
          "port": {
            "type": "integer"
          },
          "project_id": {
            "type": "string"
          },
          "secret_variables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "sphere_count": {
            "type": "integer"
          },
          "stor": {
            "$ref": "#/components/schemas/model.DeploymentPVCRequest"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "model.ServiceResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string"
          },
          "deployments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.DeploymentResponse"
            }
          },
          "id": {
            "type": "string"
          },
          "last_opened_at": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "model.SimpleResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "parent_id": {
            "type": "string"
          },
          "parent_name": {
            "type": "string"
          }
        }
      },
      "model.SingleResourceHistory": {
        "type": "object",
        "properties": {
          "spherelets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SphereletResource"
            }
          }
        }
      },
      "model.SnapshotLogsResponse": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "deployment_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "module": {
            "type": "string"
          },
          "remarks": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "model.SphereCount": {
        "type": "object",
        "properties": {
          "deployment": {
            "type": "integer"
          },
          "project": {
            "type": "integer"
          },
          "service": {
            "type": "integer"
          },
          "user": {
            "type": "integer"
          }
        }
      },
      "model.SphereOpsExtra": {
        "required": [
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "model.SphereOpsResponse": {
        "required": [
          "config"
        ],
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          }
        }
      },
      "model.SphereletResource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name of the spherelet"
          },
          "quantity": {
            "type": "integer",
            "description": "quantity of the spherelet"
          },
          "rate": {
            "type": "number",
            "description": "rate (unit price) of the spherelet"
          }
        }
      },
      "model.SphereshellTokenURl": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        }
      },
      "model.SpherestorRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "storage_size": {
            "type": "string"
          }
        }
      },
      "model.SpherestorResource": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer"
          },
          "rate": {
            "type": "number"
          }
        }
      },
      "model.SpherestorResponse": {
        "type": "object",
        "properties": {
          "environment_id": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "service_count": {
            "type": "integer"
          },
          "status": {
            "type": "boolean",
            "description": "isCreated / CanBeMounted"
          },
          "storage_size": {
            "type": "string"
          },
          "storage_type": {
            "type": "string"
          }
        }
      },
      "model.StorageUsageRequest": {
        "type": "object",
        "properties": {
          "environment_id": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "restore_pvc_name": {
            "type": "string"
          },
          "spherestor_id": {
            "type": "string"
          }
        }
      },
      "model.SubscriptionCategoryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "model.SubscriptionFeatureRequest": {
        "required": [
          "accessibility",
          "name"
        ],
        "type": "object",
        "properties": {
          "accessibility": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/model.Accessibility"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "subscription_category_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          }
        }
      },
      "model.SubscriptionFeatureResponse": {
        "type": "object",
        "properties": {
          "accessibility": {
            "$ref": "#/components/schemas/model.Accessibility"
          },
          "active": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "subscription_category_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          }
        }
      },
      "model.SubscriptionFeatureUpdateRequest": {
        "required": [
          "accessibility"
        ],
        "type": "object",
        "properties": {
          "accessibility": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/model.Accessibility"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          }
        }
      },
      "model.SubscriptionItemRequest": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string"
          },
          "subscription_category_id": {
            "type": "string"
          },
          "subscription_feature_id": {
            "type": "string"
          },
          "subscription_id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "model.SubscriptionItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "subscription_category": {
            "$ref": "#/components/schemas/model.SubscriptionCategoryResponse"
          },
          "subscription_category_id": {
            "type": "string"
          },
          "subscription_feature": {
            "$ref": "#/components/schemas/model.SubscriptionFeatureResponse"
          },
          "subscription_feature_id": {
            "type": "string"
          },
          "subscription_id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "model.SubscriptionRequest": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string"
          },
          "currency_code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "model.SubscriptionResource": {
        "type": "object",
        "properties": {
          "subscribed_date": {
            "type": "string"
          },
          "subscription_id": {
            "type": "string"
          }
        }
      },
      "model.SubscriptionResponse": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "currency_code": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "subscription_item": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SubscriptionItemResponse"
            }
          }
        }
      },
      "model.SubscriptionWithPlanQtyResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "country_code": {
            "type": "string"
          },
          "currency_code": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.PlanWithQtyResponse"
            }
          },
          "price": {
            "type": "number"
          },
          "subscription_item": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SubscriptionItemResponse"
            }
          }
        }
      },
      "model.SubscriptionWithPlanResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "country_code": {
            "type": "string"
          },
          "currency_code": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "plans": {
            "type": "array",
            "items": {
            }
          },
          "price": {
            "type": "number"
          },
          "subscription_item": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SubscriptionItemResponse"
            }
          }
        }
      },
      "model.TeamProjectWithPermissionRequest": {
        "type": "object",
        "properties": {
          "Project_id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          }
        }
      },
      "model.TeamProjectWithPermissionResponse": {
        "type": "object",
        "properties": {
          "Project_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          }
        }
      },
      "model.TeamProjectWithPermissionUpdateRequest": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          }
        }
      },
      "model.TeamProjectWithRole": {
        "type": "object",
        "properties": {
          "project": {
            "$ref": "#/components/schemas/model.ProjectResponse"
          },
          "role": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "model.TeamRequestPayload": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "model.TeamResponse": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/model.AccountResponse"
          },
          "account_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "owner_id": {
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.UserResponse"
            }
          }
        }
      },
      "model.TeamUpdateUserRequest": {
        "type": "object",
        "properties": {
          "user_email": {
            "type": "string"
          }
        }
      },
      "model.UntarFileRequest": {
        "type": "object",
        "properties": {
          "deployment_id": {
            "type": "string"
          },
          "environment_id": {
            "type": "string"
          },
          "spherestor_id": {
            "type": "string"
          },
          "tar_path": {
            "type": "string"
          }
        }
      },
      "model.UserProfileUrlRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        }
      },
      "model.UserResponse": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/model.AccountResponse"
          },
          "active": {
            "type": "boolean"
          },
          "address": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "designation": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_admin": {
            "type": "boolean"
          },
          "last_name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "sso_id": {
            "type": "string"
          },
          "system_theme": {
            "type": "boolean"
          },
          "theme": {
            "type": "string"
          }
        }
      },
      "model.UserThemeRequest": {
        "type": "object",
        "properties": {
          "system_theme": {
            "type": "boolean"
          },
          "theme": {
            "type": "string"
          }
        }
      },
      "model.UserUpdateRoleRequest": {
        "type": "object",
        "properties": {
          "is_admin": {
            "type": "boolean"
          }
        }
      },
      "model.ValidateOtpResponse": {
        "type": "object",
        "properties": {
          "otp": {
            "type": "string"
          },
          "valid": {
            "type": "boolean"
          }
        }
      },
      "model.VerifyOTPRequest": {
        "type": "object",
        "properties": {
          "otp": {
            "type": "string"
          }
        }
      },
      "model.WebHooks": {
        "type": "object",
        "properties": {
          "content_type": {
            "type": "string",
            "description": "supported types are: json, text"
          },
          "token": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "payments.GatewayReponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "invoice_id": {
            "type": "string"
          },
          "tracking_id": {
            "type": "string",
            "description": "Session id is the tracking id for stripe"
          },
          "transaction_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "response.ErrorResponse": {
        "type": "object",
        "properties": {
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "response.Response": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "object"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "today": {
            "type": "object"
          },
          "total": {
            "type": "object"
          }
        }
      },
      "response.SuccessMessageOnly": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "response.SuccessResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "data": {
            "type": "object"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "shell.RequestToken": {
        "type": "object",
        "properties": {
          "container_name": {
            "type": "string"
          },
          "deployment_id": {
            "type": "string"
          },
          "pod_name": {
            "type": "string"
          }
        }
      },
      "swagger.AccountListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.AccountResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.AccountOverviewResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.AccountOverview"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.AccountResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.AccountResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.AccountUserWithPermissionResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.AccountUserWithPermissionResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.AccountUserWithRoleListSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.AccountUserWithRole"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.ActivityListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.ActivityResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.ApiTokenListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.ApiTokenResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.ApiTokenResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.ApiTokenResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.AuditLogResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.AuditLogsResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.CliUserRegisterResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.RegistryUserResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.ClusterListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.ClusterResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.ClusterPackageListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.ClusterPackageResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.ClusterPackageResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.ClusterPackageResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.ClusterResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.ClusterResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.ComplianceReportResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.ComplianceReportResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.ComplianceReportSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.ComplianceReportResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.DeploymentHistoryListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.DeploymentHistorySwaggerResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.DeploymentHistoryResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.DeploymentHistorySwaggerResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.DeploymentResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.DeploymentResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.EmailOTPResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.EmailOTPResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.EnvironmentListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.EnvironmentResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.EnvironmentResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.EnvironmentResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.EnvironmentSpherestorListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SpherestorResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.EnvironmentSpherestorResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/components/schemas/model.SpherestorResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.EnvironmentSubDomain": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.EnvSubDomain"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.FeatureRequestResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.FeatureTrackingResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.GatewayReponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/payments.GatewayReponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.GuardrailResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.GuardrailResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.GuardrailRuleResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "swagger.GuardrailRuleResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.GuardrailSingleRuleResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.GuardrailRulesResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.GuardrailSingleRuleResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.GuardrailSingleErrorResponse": {
        "type": "object",
        "properties": {
          "effect": {
            "type": "string"
          },
          "guardrail_id": {
            "type": "string"
          },
          "guardrail_name": {
            "type": "string"
          },
          "guardrail_rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swagger.GuardrailRuleResponse"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.GuardrailSingleFieldListResponseSwagger": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swagger.GuardrailSingleErrorResponse"
            }
          },
          "field_name": {
            "type": "string"
          },
          "is_valid": {
            "type": "boolean"
          },
          "scope": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        }
      },
      "swagger.GuardrailSingleFieldResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/swagger.GuardrailSingleFieldListResponseSwagger"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.GuardrailSupportedFieldsSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.InAppNotificationListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.InAppNotificationResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.InAppNotificationReadCountSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.InAppNotificationReadCount"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.InvoiceItemListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.InvoiceItemResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.InvoiceItemResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.InvoiceItemResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.InvoiceListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.InvoiceResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.InvoiceResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.InvoiceResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.LoginResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.LoginResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.MapStringInterfaceResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": true
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.NotificationSettingResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.NotificationSettingResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.PaymentGatewayListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.PaymentGatewayResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.PaymentGatewayResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.PaymentGatewayResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.PaymentHistoryListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.PaymentHistoryResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.PaymentHistoryResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.PaymentHistoryResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.PaymentResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.PaymentFreeResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.PlanListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.PlanResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.PluginListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.PluginResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.PluginResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.PluginResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.ProjectListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.ProjectResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.ProjectResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.ProjectResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.ResourceHistoryResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.ResourceHistoryResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.ResourceUsageHistorySwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.ResourceUsageHistory"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.ServiceListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.ServiceResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.ServiceResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.ServiceResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.SingleGuardrailResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.GuardrailResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.SnapshotBackupResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.BackupResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.SnapshotLogsResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SnapshotLogsResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.SnapshotRestoreResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.RestoreResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.SphereOpsCpuResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.CpuResponseData"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.SphereOpsMemoryResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.MemoryResponseData"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.SphereOpsResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.SphereOpsResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.StringListResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.StringResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.SubscriptionItemListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SubscriptionItemResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.SubscriptionItemResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.SubscriptionItemResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.SubscriptionItemsResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SubscriptionItemResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.SubscriptionResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.SubscriptionResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.SubscriptionWithPlanListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.SubscriptionWithPlanResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.SubscriptionWithPlanQtyResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/components/schemas/model.SubscriptionWithPlanQtyResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.SubscriptionWithPlanResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.SubscriptionWithPlanResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.TeamListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.TeamResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.TeamProjectWithRoleResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.TeamProjectWithRole"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.TeamResponseSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.TeamResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "swagger.UserListResponseSwagger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.UserResponse"
            }
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "swagger.ValidateOtpSwaggerresponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/model.ValidateOtpResponse"
          },
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "x-original-swagger-version": "2.0"
}